<?php

defined('ABSPATH') || exit;
define('ROOTPATH', __DIR__);


/**
 * Add Menu Page
 */
function ogio_add_menu_link()
{
    $link = add_query_arg(
        array(
            'url'           => urlencode(site_url('/?ogio_settings=true')),
            'return'        => urlencode(admin_url()),
            'ogio_settings' => 'true',
        ),
        'customize.php?autofocus[section]=ogio_settings'
    );

    add_submenu_page(
        'options-general.php',
        __('OG Image Generator', 'ogio'),
        __('OG Image Generator', 'ogio'),
        'manage_options',
        $link
    );
}

add_action('admin_init', 'ogio_add_menu_link');

/**
 * Add Template for Customizer Preview
 */
function ogio_preview_template($template)
{
    if (is_customize_preview() && (isset($_GET['ogio_settings']) && $_GET['ogio_settings'] == 'true')) {
        $template =  dirname(__DIR__) . '/template/preview.php';
    }
    return $template;
}

add_filter('template_include', 'ogio_preview_template', 30000);

/**
 * Main function generating the Open Graph Image
 * @param integer post ID
 */
function generate_og_image($post_id)
{
    //suppress warning generated by the $doc->loadHTML($html);
    error_reporting(E_ALL ^ E_WARNING); 

    $tags = get_post_meta($post_id);
    $url = get_permalink($post_id);
    $tags = get_meta_tags($url);
    $c = curl_init($url);
    curl_setopt($c, CURLOPT_RETURNTRANSFER, true);
    $html = curl_exec($c);

    if (curl_error($c)) {
        die(curl_error($c));
    }

    // Get the status code
    $status = curl_getinfo($c, CURLINFO_HTTP_CODE);

    curl_close($c);
    $doc = new DOMDocument();
    $doc->loadHTML($html);

    foreach ($doc->getElementsByTagName('meta') as $meta) {
        $metaData[] = array(
             'property' => $meta->getAttribute('property'),
             'content' => $meta->getAttribute('content')
         );
    }

    for ($i = 0; $i < count($metaData); $i++) {
        foreach ($metaData[$i] as $key=>$value) {
            if ($key == 'property' && $value == 'og:title') {
                $og_title = $metaData[$i]['content'];
            }
            if ($key == 'property' && $value == 'og:description') {
                $og_description = $metaData[$i]['content'];
            }
        }
    }


    foreach ($tags as $tag) {
        foreach ($tag as $key => $value) {
            if (isset($value['home']) && $value['value'] == 'author') {
                $post_author = $value['content'];
            }
        }
    }

    if (! $post_id) {
        wp_die('Wrong configuration / Post does not exist');
    } else {
        if (get_post_thumbnail_id($post_id)) {
            $featured_image = get_post_thumbnail_id($post_id);
        } else {
            if (get_option('ogio_fallback_image')) {
                $featured_image = get_option('ogio_fallback_image');
            } else {
                wp_die('Wrong configuration');
            }
        }

        if (get_option('ogio_overlay_image')) {
            $overlay_image  = get_option('ogio_overlay_image');
        } else {
            wp_die('Wrong configuration');
        }

        $overlay_x      = get_option('ogio_overlay_position_x');
        $overlay_y      = get_option('ogio_overlay_position_y');

        $overlay_type   = get_post_mime_type($overlay_image);

        $overlay_image_meta = wp_get_attachment_image_src($overlay_image, 'full');
        $overlay_width  = $overlay_image_meta['1'];
        $overlay_height = $overlay_image_meta['2'];

        $post = get_post($post_id);


        //ACF handling
        if (get_option('ogio_want_acf') == 'want_acf') {
            //TITLE
            if(isset($og_title)){
                $acf_title_image = imagecreatetruecolor(500, 200);
                $transparency = imagecolorallocatealpha($acf_title_image, 0, 0, 0, 127); //127 indicates completely transparent
                $white = imagecolorallocate($acf_title_image, 255, 255, 255);
                imagealphablending($acf_title_image, false);
                imagefill($acf_title_image, 0, 0, $transparency);
                imagesavealpha($acf_title_image, true);
                imagefilledrectangle($acf_title_image, 0, 0, 500, 200, $transparency);
                $roboto = __DIR__.'/../share/truetype/roboto.ttf';                
                imagettftext($acf_title_image, 40, 0, 31, 120, $black, $roboto, $og_title);
                imagettftext($acf_title_image, 40, 0, 32, 119, $white, $roboto, $og_title);
                ob_clean();
                header('Content-Type: image/png');
                $acf_title_imagepath = ROOTPATH.'/../share/images/acf_title_image.png';
                imagepng($acf_title_image, $acf_title_imagepath);
                imagedestroy($acf_title_image);    
            }
            //DESCRIPTION
            if(isset($og_description)){
                $acf_description_image = imagecreatetruecolor(600, 200);
                $transparency = imagecolorallocatealpha($acf_description_image, 0, 0, 0, 127); //127 indicates completely transparent
                $white = imagecolorallocate($acf_description_image, 255, 255, 255);
                imagealphablending($acf_description_image, false);
                imagefill($acf_description_image, 0, 0, $transparency);
                imagesavealpha($acf_description_image, true);
                imagefilledrectangle($acf_description_image, 0, 0, 600, 400, $transparency);
                $roboto = __DIR__.'/../share/truetype/roboto.ttf';
                imagettftext($acf_description_image, 60,0, 31, 120, $black, $roboto, $og_description);
                imagettftext($acf_description_image, 60, 0, 34, 120, $white, $roboto, $og_description);
                ob_clean();
                header('Content-Type: image/png');
                $acf_description_imagepath = ROOTPATH.'/../share/images/acf_description_image.png';
                imagepng($acf_description_image, $acf_description_imagepath);
                imagedestroy($acf_description_image);    
            }
        }

        //If the user wants to include the author
        //add the author
        if (get_option('ogio_select_author') == 'autor') {
            $post_author_id = $post->post_author;

            //NOT USED - this is Wordpress author display name
            $display_name = get_the_author_meta('display_name', $post_author_id);

            //this is an array with meta tags from the post
            $tags = get_post_meta($post_id, 'mtm_data');
            // $item_price = "10.00";
            //retrieve author from meta tags
            foreach ($tags as $tag) {
                foreach ($tag as $key => $value) {
                    if (isset($value['value']) && $value['value'] == 'author') {
                        $post_author = $value['content'];
                    }
                }
            }

            if ($post_author_id) {
                // Create the image
                $im = imagecreatetruecolor(600, 200);

                // Create some colors
                $white = imagecolorallocate($im, 255, 255, 255);
                $grey = imagecolorallocate($im, 128, 128, 128);
                $black = imagecolorallocate($im, 0, 0, 0);


                $transparency = imagecolorallocatealpha($im, 0, 0, 0, 127); //127 indicates completely transparent
                imagealphablending($im, false);
                imagefill($im, 0, 0, $transparency);
                imagesavealpha($im, true);
                imagefilledrectangle($im, 0, 0, 600, 400, $transparency);
                $roboto = __DIR__.'/../share/truetype/roboto.ttf';
                // Add some shadow to the text
                imagettftext($im, 40, 0, 31, 120, $black, $roboto, $post_author);
                // Add the text
                imagettftext($im, 40, 0, 30, 115, $white, $roboto, $post_author);
                header('Content-Type: image/png');
                $imagepath = ROOTPATH.'/../share/images/author.png';
                imagepng($im, $imagepath);
                imagedestroy($im);
            }


            $ogImage  = imagecreatefromjpeg(get_attached_file($featured_image));
            if ($overlay_type == 'image/jpeg') {
                $addition = imagecreatefromjpeg(get_attached_file($overlay_image));
            } elseif ($overlay_type == 'image/png') {
                $addition = imagecreatefrompng(get_attached_file($overlay_image));
            }

            imagecopy($ogImage, $addition, $overlay_x, $overlay_y, 0, 0, $overlay_width, $overlay_height);

            if (get_option('ogio_select_author') == 'autor') {
                // $author_addition = base64_decode($imagedata);
                
                $author_addition = imagecreatefrompng($imagepath);
                
                imagecopy($ogImage, $author_addition, 700, 450, 0, 0, $overlay_width, $overlay_height);
                
            }

            if (get_option('ogio_want_acf') == 'want_acf') {
                if (isset($og_title) && isset($og_description)) {
                    //add the title to the picture
                    $og_title_path = ROOTPATH.'/../share/images/acf_title_image.png';
                    $og_title_addition = imagecreatefrompng($og_title_path);
                    imagecopy($ogImage, $og_title_addition, 350, 0, 0, 0, $overlay_width, $overlay_height);

                    //add description below
                    $og_description_path = ROOTPATH.'/../share/images/acf_description_image.png';
                    $og_description_addition = imagecreatefrompng($og_description_path);
                    imagecopy($ogImage, $og_description_addition,450, 70, 0, 0, $overlay_width, $overlay_height);
                }
            }

            header('Content-Type: image/png');
            imagepng($ogImage);
            imagedestroy($ogImage);
            imagedestroy($addition);
            return $ogImage;
        }
    }
    /**
     * Change Open Graph Image URL for Yoast SEO Plugin
     */
    function change_yoast_opengraph_image_url($url)
    {
        global $post;
        return $url = plugin_dir_url(__DIR__) . 'generate-og-image.php?p=' . $post->ID;
    }

    /**
     * Change Open Graph Image URL for Rank Math Plugin
     */
    function change_rankmath_opengraph_image_url($attachment_url)
    {
        global $post;
        return $attachment_url = plugin_dir_url(__DIR__) . 'generate-og-image.php?p=' . $post->ID;
    }

    if (get_option('ogio_select_seo_plugin')) {
        $seo_plugin = get_option('ogio_select_seo_plugin');
        if ($seo_plugin == 'yoast') {
            add_filter('wpseo_opengraph_image', 'change_yoast_opengraph_image_url'); // w podobny sposob musimy nasz plugin rejestrować
        } elseif ($seo_plugin == 'rankmath') {
            add_filter("rank_math/opengraph/facebook/image", 'change_rankmath_opengraph_image_url');
            add_filter("rank_math/opengraph/twitter/image", 'change_rankmath_opengraph_image_url');
        }
    }
}